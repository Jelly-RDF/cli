name: Ahead-of-time compilation test
on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: AOT test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Only test on Mac and Ubuntu â€“ these are the fastest platforms.
        # Windows and Linux ARM are built later after the PR is merged.
        os: [macos-14, ubuntu-22.04]
    steps:
      - uses: actions/checkout@v4

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Setup SBT
        uses: sbt/setup-sbt@v1

      - name: Build native image
        env:
          DEV_BUILD: true
        run: sbt GraalVMNativeImage/packageBin

      - name: Test the binary
        run: |
          set -eux
          
          # See if it runs at all
          target/graalvm-native-image/jelly-cli version
          
          # Make sure reflection works
          target/graalvm-native-image/jelly-cli version | grep "JVM reflection: supported"
          
          # Test RDF conversions
          echo '_:b <http://t.org/> _:b .' | target/graalvm-native-image/jelly-cli \
            rdf to-jelly --in-format=nt > out.jelly && \
            [ -s out.jelly ]
          target/graalvm-native-image/jelly-cli \
            rdf from-jelly --out-format=jelly-text out.jelly > out.txt && \
            [ -s out.txt ]
          target/graalvm-native-image/jelly-cli \
            rdf from-jelly --out-format=jsonld out.jelly > out.json && \
            [ -s out.json ]
          echo '{"@graph":[{"@id":"http://e.org/r","http://e.org/p":{"@value":"v"}}]}' | \
            target/graalvm-native-image/jelly-cli rdf to-jelly --in-format "jsonld" > jsonld.jelly && \
            [ -s jsonld.jelly ]
          echo '<?xml version="1.0"?><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Seq rdf:about="http://example.org/favourite-fruit"></rdf:Seq></rdf:RDF>' | \
            target/graalvm-native-image/jelly-cli rdf to-jelly --in-format "rdfxml" > rdfxml.jelly && \
            [ -s rdfxml.jelly ]

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: jelly-cli-${{ matrix.os }}
          path: target/graalvm-native-image/*
